.box1 { background: #1abc9c; }
.box2 { background: #3498db; }
.box3 { background: #9b59b6; }
.box4 { background: #34495e; }
.box5 { background: #fec40f; }
.box6 { background: #e67e22; }
.box7 { background: #e74c3c; }
.box8 { background: #bdc3c7; }
.box9 { background: #2ecc71; }
.box10 { background: #16a085; }

.container {
    display: flex;
    min-height: 100vh;
    flex-wrap: wrap;
    border: 10px solid goldenrod;
    /*
        possible values: wrap, wrap-reverse
        this property is applied on parent (flex container) not on children (flex item) to be arrange
        This propety will honour the space required for each flex item and wraps rest of the the flex itesm based on the space available.
    */
}

.box {
    color: white;
    font-size: 100px;
    text-align: center;
    text-shadow: 4px 4px 0 rgba(0, 0, 0, 0.1);
    width: calc(33.3333333% - 20px);
    border: 1px solid mistyrose;
    margin: 10px;
    /*
        margin is not part of flexbox calculation, we have to explicity use calc function to update the layout
        padding and border around flex items are part of layout calculation and need to be updated with calc function
    */
}